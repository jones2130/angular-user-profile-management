{"version":3,"sources":["c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/$_lazy_route_resource lazy","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app-routing.module.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.component.html","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.component.scss","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.component.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.module.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/admin.guard.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/auth.guard.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/auth.service.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/logout.guard.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/home/home.component.html","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/home/home.component.scss","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/home/home.component.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/login/login.component.html","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/login/login.component.scss","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/login/login.component.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/list/list.component.html","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/list/list.component.scss","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/list/list.component.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/update/update.component.html","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/update/update.component.scss","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/update/update.component.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/register/register.component.html","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/register/register.component.scss","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/register/register.component.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/user/user.service.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/validator/password.validator.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/environments/environment.ts","c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { UpdateComponent } from './profile/update/update.component';\nimport { ListComponent } from './profile/list/list.component';\n\nimport { AuthGuard } from './auth/auth.guard';\nimport { AdminGuard } from './auth/admin.guard';\nimport { LogoutGuard } from './auth/logout.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent, canActivate: [LogoutGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [LogoutGuard] },\n  { path: 'profile', component: UpdateComponent, canActivate: [AuthGuard]},\n  { path: 'profile/:id', component: UpdateComponent, canActivate: [AuthGuard, AdminGuard]},\n  { path: 'list', component: ListComponent, canActivate: [AuthGuard, AdminGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app-routing.module.ts","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">User Profile Manager</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto \\\">\\n      <li class=\\\"nav-item active\\\" *ngIf=\\\"!authService.isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-user\\\"></span> Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-sign-in\\\"></span> Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\" routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-edit\\\"></span> Edit Profile</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.isSuper\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/list\\\" routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-users\\\"></span> Manage Users</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"authService.isLoggedIn\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"authService.logout()\\\"><span class=\\\"fa fa-sign-out\\\"></span> Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"nav button span {\\n  font-size: 27px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(public authService: AuthService, private route: ActivatedRoute, private router: Router) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ListComponent } from './profile/list/list.component';\nimport { UpdateComponent } from './profile/update/update.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AdminGuard } from './auth/admin.guard';\nimport { LogoutGuard } from './auth/logout.guard';\nimport { UserService } from './user/user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    ListComponent,\n    UpdateComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    AdminGuard,\n    LogoutGuard,\n    UserService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(!this.auth.isLoggedIn || !this.auth.isSuper) {\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/admin.guard.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(!this.auth.isLoggedIn) {\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/auth.guard.ts","import { Injectable } from '@angular/core';\n\nimport { HttpHeaders, HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Credentials } from '../user/credentials';\nimport { User } from '../user/user';\n\nimport 'rxjs/add/operator/toPromise';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AuthService {\n  private loginURL: string = \"/users/login\";\n  private logoutURL: string = \"/users/logout\";\n\n  private headers = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  public login(credentials:Credentials, callback) {\n    return this.http.post<User>(`${this.loginURL}/`, credentials, this.headers).subscribe(data => {\n      sessionStorage.setItem('_id', data._id);\n      sessionStorage.setItem('isLoggedIn', true.toString());\n      sessionStorage.setItem('isSuper', data.isSuper.toString());\n      this.router.navigate(['/profile']);\n    }, (err: HttpErrorResponse) => {\n      callback(err);\n    })\n  }\n\n  public logout() {\n    sessionStorage.removeItem('_id');\n    sessionStorage.removeItem('isLoggedIn');\n    sessionStorage.removeItem('isSuper');\n    \n    return this.http.post(`${this.logoutURL}/`, {}).subscribe((res) => {\n      this.router.navigate(['/']);\n    });\n  }\n\n  get isLoggedIn(): boolean {\n    if(sessionStorage.getItem('isLoggedIn') == 'true') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get isSuper(): boolean {\n    if(sessionStorage.getItem('isSuper') == 'true') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/auth.service.ts","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LogoutGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.auth.isLoggedIn) {\n      this.router.navigate(['/profile']);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/auth/logout.guard.ts","module.exports = \"<p>\\n  home works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/home/home.component.scss\n// module id = ../../../../../src/app/home/home.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/home/home.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <h3>Login</h3>\\n  <br />\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\n    Login credentials failed.\\n  </div>\\n  \\n  <form [formGroup]=\\\"loginForm\\\" novalidate (ngSubmit)=\\\"login(loginForm.value, loginForm.valid)\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"title\\\">Username:</label>\\n      <input formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"col-md-10 form-control\\\" id=\\\"username\\\" />\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"author\\\">Password</label>\\n      <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"col-md-10 form-control\\\" id=\\\"password\\\" />\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button class=\\\"col-lg-2 btn btn-success\\\" type=\\\"submit\\\"><span class=\\\"fa fa-sign-in\\\"></span> Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  padding: 24px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/login/login.component.scss\n// module id = ../../../../../src/app/login/login.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { AuthService } from '../auth/auth.service';\n\nimport { Credentials } from '../user/credentials';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n  public submitted: boolean;\n  public events: any[] = [];\n  public errorMessage: boolean;\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [<any>Validators.required]),\n      password: new FormControl('', [<any>Validators.required]),\n    })\n  }\n\n  login(credentials: Credentials, isValid: Boolean): void {\n    if(isValid) {\n      this.authService.login(credentials, (err: HttpErrorResponse) => {\n        if(err.status == 401) {\n          this.errorMessage = true;\n        }\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/login/login.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"!profiles || profiles.length == 0\\\" class=\\\"jumbotron\\\">\\n    <h2>No user profiles available.</h2>\\n    <a routerLink=\\\"/profile\\\" class=\\\"btn btn-success\\\"><span class=\\\"fa fa-edit\\\"></span> Edit Your Profile</a>\\n  </div>\\n\\n  <div class=\\\"card profile\\\" *ngFor=\\\"let profile of profiles\\\">\\n    <div class=\\\"card-block\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n          <h3 class=\\\"card-title\\\">{{ profile.username }}</h3>\\n          <h6 class=\\\"card-subtitle text-muted\\\">{{ profile.first_name }} {{ profile.last_name }}</h6>\\n        </div>\\n\\n        <div class=\\\"col-sm-4\\\">\\n          <span class=\\\"float-right\\\">\\n            <button [routerLink]=\\\"['/profile', profile._id]\\\" class=\\\"btn btn-primary\\\">Edit</button>\\n            <button (click)=\\\"deleteUser(profile)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n          </span>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/list/list.component.html\n// module id = ../../../../../src/app/profile/list/list.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  padding: 24px; }\\n\\n.card {\\n  padding: 10px;\\n  margin: 5px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/list/list.component.scss\n// module id = ../../../../../src/app/profile/list/list.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { UserService } from '../../user/user.service';\n\nimport { User } from '../../user/user';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  private profiles: User[];\n\n  constructor(private userService: UserService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.userService.getProfiles().subscribe((profiles: User[]) => {\n      this.profiles = profiles;\n    });\n  }\n\n  public deleteUser(user: User):void {\n    this.userService.deleteUser(user).subscribe(() => {\n      this.userService.getProfiles().subscribe((profiles: User[]) => {\n        this.profiles = profiles;\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/list/list.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <h3>Edit Profile</h3>\\n\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\">\\n    {{errorMessage}}\\n  </div>\\n\\n  <div *ngIf=\\\"successMessage\\\" class=\\\"alert alert-success\\\">\\n    {{successMessage}}\\n  </div>\\n\\n  <form [formGroup]=\\\"updateForm\\\" novalidate (ngSubmit)=\\\"submit(updateForm.value, updateForm.valid)\\\">\\n    <div class=\\\"form-group row\\\">\\n      <input formControlName=\\\"_id\\\" type=\\\"hidden\\\" id=\\\"_id\\\" />\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"author\\\">First Name:</label>\\n      <input formControlName=\\\"first_name\\\" type=\\\"text\\\" class=\\\"col-md-10 form-control\\\" id=\\\"first_name\\\" />\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"title\\\">Last Name:</label>\\n      <input formControlName=\\\"last_name\\\" type=\\\"text\\\" class=\\\"col-md-10 form-control\\\" id=\\\"last_name\\\" />\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\">Gender:</label>\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <label class=\\\"md-check\\\">\\n              <input type=\\\"radio\\\" value=\\\"male\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">&nbsp;Male\\n            </label>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <label class=\\\"md-check\\\" for=\\\"gener\\\">\\n              <input type=\\\"radio\\\" value=\\\"female\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">&nbsp;Female\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"author\\\">Age</label>\\n      <input formControlName=\\\"age\\\" type=\\\"number\\\" class=\\\"col-md-10 form-control\\\" id=\\\"age\\\" />\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button class=\\\"col-lg-2 btn btn-success\\\" type=\\\"submit\\\"><span class=\\\"fa fa-edit\\\"></span> Edit Profile</button>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/update/update.component.html\n// module id = ../../../../../src/app/profile/update/update.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  padding: 24px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/update/update.component.scss\n// module id = ../../../../../src/app/profile/update/update.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\n\nimport 'rxjs/add/operator/switchMap';\n\nimport { UserService } from '../../user/user.service';\n\nimport { User } from '../../user/user';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n  private profileData: User;\n\n  public updateForm: FormGroup;\n  public submitted: boolean;\n  public events: any[] = [];\n  public errorMessage: string;\n  public successMessage: string;\n\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.updateForm = new FormGroup({\n      first_name: new FormControl('', []),\n      last_name: new FormControl('', []),\n      gender: new FormControl('', []),\n      age: new FormControl('', []),\n      _id: new FormControl('', [<any>Validators.required]),\n    });\n\n    this.route.paramMap.switchMap((params: ParamMap) => this.userService.getProfile(params.get('id')))\n      .subscribe((profileData: User) => this.populateForm(profileData));\n  }\n\n  populateForm(profileData: User): void {\n    this.profileData = profileData;\n\n    this.updateForm = new FormGroup({\n      first_name: new FormControl(profileData.first_name, []),\n      last_name: new FormControl(profileData.last_name, []),\n      gender: new FormControl(profileData.gender, []),\n      age: new FormControl(profileData.age, []),\n      _id: new FormControl(profileData._id, [<any>Validators.required]),\n    });\n  }\n\n  submit(user: any, isValid: Boolean): void {\n    if(isValid) {\n      this.userService.update(user, (res) => {\n        if(res.status != 401) {\n          this.successMessage = res.message;\n        } else {\n          this.errorMessage = \"Unauthorized access\";\n        }\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/profile/update/update.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <h3>Register</h3>\\n  \\n  <form [formGroup]=\\\"registerForm\\\" novalidate (ngSubmit)=\\\"submit(registerForm.value, registerForm.valid)\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"title\\\"><span style=\\\"color: red;\\\">*</span> Username:</label>\\n      <input formControlName=\\\"username\\\" type=\\\"text\\\" class=\\\"col-md-10 form-control\\\" id=\\\"username\\\" name=\\\"username\\\" />\\n    </div>\\n\\n    <div *ngIf=\\\"(registerForm.controls.username.invalid) && (registerForm.controls.username.touched || registerForm.controls.username.dirty)\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"registerForm.controls.username.errors.required\\\">\\n        Username is required.\\n      </div>\\n\\n      <div *ngIf=\\\"registerForm.controls.username.errors.minlength\\\">\\n        Username must be at least 4 characters long.\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"author\\\"><span style=\\\"color: red;\\\">*</span> Password:</label>\\n      <input formControlName=\\\"password\\\" type=\\\"password\\\" class=\\\"col-md-10 form-control\\\" id=\\\"password\\\" />\\n    </div>\\n\\n    <div *ngIf=\\\"registerForm.controls.password.invalid && (registerForm.controls.password.dirty || registerForm.controls.password.touched)\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"registerForm.controls.password.errors.required\\\">\\n        Password is required.\\n      </div>\\n\\n      <div *ngIf=\\\"registerForm.controls.password.errors.minlength\\\">\\n        Password must be at least 8 characters long.\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"title\\\"><span style=\\\"color: red;\\\">*</span> Confirm Password:</label>\\n      <input formControlName=\\\"password_confirm\\\" type=\\\"password\\\" class=\\\"col-md-10 form-control\\\" id=\\\"password_confirm\\\" />\\n    </div>\\n\\n    <div *ngIf=\\\"registerForm.controls.password_confirm.invalid && (registerForm.controls.password_confirm.dirty || registerForm.controls.password_confirm.touched)\\\" class=\\\"alert alert-danger\\\">\\n      <div *ngIf=\\\"registerForm.controls.password_confirm.errors.required\\\">\\n        Password Confirmation is required.\\n      </div>\\n\\n      <div *ngIf=\\\"registerForm.controls.password_confirm.errors.minlength\\\">\\n        Password Confirmation must be at least 8 characters long.\\n      </div>\\n\\n      <div *ngIf=\\\"registerForm.controls.password_confirm.errors.nomatch\\\">\\n        Passwords must match.\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"author\\\">First Name:</label>\\n      <input formControlName=\\\"first_name\\\" type=\\\"text\\\" class=\\\"col-md-10 form-control\\\" id=\\\"first_name\\\" />\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"title\\\">Last Name:</label>\\n      <input formControlName=\\\"last_name\\\" type=\\\"text\\\" class=\\\"col-md-10 form-control\\\" id=\\\"last_name\\\" />\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\">Gender:</label>\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <label class=\\\"md-check\\\">\\n              <input type=\\\"radio\\\" value=\\\"male\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">&nbsp;Male\\n            </label>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <label class=\\\"md-check\\\" for=\\\"gener\\\">\\n              <input type=\\\"radio\\\" value=\\\"female\\\" name=\\\"gender\\\" formControlName=\\\"gender\\\">&nbsp;Female\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group row\\\">\\n      <label class=\\\"col-md-2\\\" for=\\\"author\\\">Age</label>\\n      <input formControlName=\\\"age\\\" type=\\\"number\\\" class=\\\"col-md-10 form-control\\\" id=\\\"age\\\" />\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button class=\\\"col-lg-2 btn btn-success\\\" type=\\\"submit\\\"><span class=\\\"fa fa-plus-circle\\\"></span> Register</button>\\n    </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container {\\n  padding: 24px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/register/register.component.scss\n// module id = ../../../../../src/app/register/register.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { passwordMatch } from '../validator/password.validator';\n\nimport { UserService } from '../user/user.service';\n\nimport { User } from '../user/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public registerForm: FormGroup;\n  public submitted: boolean;\n  public events: any[] = [];\n  public errorMessages: string;\n  constructor(private formBuilder: FormBuilder, private userService: UserService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.minLength(4)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      password_confirm: new FormControl('', []),\n      first_name: new FormControl('', []),\n      last_name: new FormControl('', []),\n      gender: new FormControl('', []),\n      age: new FormControl('', []),\n    });\n    \n    this.registerForm.controls['password_confirm'].setValidators([Validators.required, Validators.minLength(8), passwordMatch(this.registerForm.controls.password)]);\n  }\n\n  submit(user: any, isValid: Boolean): void {\n    if(isValid) {\n      if(user.password == user.password_confirm) {\n        this.userService.register(user);\n      }\n    }\n\n    this.registerForm.controls.username.markAsTouched();\n    this.registerForm.controls.password.markAsTouched();\n    this.registerForm.controls.password_confirm.markAsTouched();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/register/register.component.ts","import { Injectable } from '@angular/core';\n\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { User } from '../user/user';\n\nimport 'rxjs/add/operator/toPromise';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class UserService {\n  private url: string = \"/users\";\n\n  private headers = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  public register(user:User) {\n    return this.http.post<User>(`${this.url}/register`, user, this.headers).subscribe((res) => {\n      this.router.navigate(['/']);\n    });\n  }\n\n  public deleteUser(user: User) {\n    return this.http.post(`${this.url}/delete/${user._id}`, user, this.headers);\n  }\n\n  public getProfile(id: String) {\n    return this.http.get(`${this.url}/${id?id:sessionStorage.getItem('_id')}`, this.headers);\n  }\n\n  public getProfiles() {\n    return this.http.get(`${this.url}/list`, this.headers);\n  }\n\n  public update(user: User, callback) {\n    return this.http.post<User>(`${this.url}/update/${user._id}`, user, this.headers).subscribe(res => {\n      callback(res);\n    }, err => {\n      callback(err);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/user/user.service.ts","import { AbstractControl,ValidatorFn } from '@angular/forms';\r\n\r\nexport function passwordMatch(password: AbstractControl): ValidatorFn {\r\n  return(control: AbstractControl): {[key: string]: any} => {\r\n    return (control.value == password.value)?null:{nomatch: true};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/app/validator/password.validator.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// c:/Work/AtomWorkspace/jjoneslab/sensorhound-test/frontend/src/main.ts"],"sourceRoot":"webpack:///"}